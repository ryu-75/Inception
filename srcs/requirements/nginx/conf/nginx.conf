
# Load configuration files for the default server block.
user                        www;
worker_processes            auto;

pcre_jit                    on;

# Configuration par defaut des erreurs de connections
error_log                   /var/log/nginx/error.log warn;

# Inclut les fichiers avec des directives pour charger des modules dynamiques.
include /etc/nginx/modules/*.conf;

# Le nombre maximum de connexions simultanees pouvant
# etre ouverts par un processus de travail
events {
    worker_connections      1024;
}

http {
    #Inclut le mappage des extensions de nom de fichier aux types de reponses MIME
    # et definit le type par defaut.
    include                 /etc/nginx/mime.types;
    default_type            application/octet-stream;

    # Senfile copie les donnees entre un FD et un autre depuis le noyau.
    # Valeur par defaut est desactivee.
    sendfile                on;

    # Ne communiquez pas la version de nginx aux clients.
    # La valeur par defaut est "on"
    server_tokens           off;

    tcp_nopush              on;

    # Specifie la taille maximale acceptee du corps d'une demande client
    # comme indique par l'en-tete de requete Content-Lenght.
    # Si le contenu indique est superieur a cette taille, alors le client
    # recoit le HTTP.
    # code erreur 413. Valeur par defaut '1m'
    client_max_body_size    1m;

    map $http_upgrade $connection_upgrade {
            default upgrade;
            '' close;
    }

    log_format main         '$remote_addr - $remote_user [$time_local] "$request" ';
			                '$status $body_bytes_sent "$http_referer" ';
			                '"$http_user_agent" "$http_x_forwarded_for"';

    # Definit le chemin, le format et la configuration pour une
    # ecriture de journal en memoire tampon
    access_log              /var/log/nginx/access.log main;

    # Specifie une duree au client pouvant re utiliser les parametres de la session
    # 5mn est la valeur par defaut
    ssl_session_timeout     1h;

    # Active les protocoles speciies.
    # La valeur par defaut est TLSv1 TLSv1.1 TLS1.2
    ssl_protocols           TLSv1.2 TLSv1.3;

    # Specifie que nos combinaisons de chiffrement doivent etre preferees
    # aux chiffrement clients. La valeur par defaut est 'off'
    ssl_prefer_server_ciphers on;

    # Permet au cache SSL de partage une taille pouvant contenir environ 8000 sessions.
    # La valeur par de faut est 'none'
    ssl_session_cache       shared:SSL:2m;

    # Desactive les tickets de session TLS (ils ne sont pas securises).
    # La valeur par defaut est 'on'
    ssl_session_tickets     off;

    # Definis l'en tete HTTP tel que defini dans la RFC 2616.
    # La valeur par defaut est 'off'
    gzip_vary               on;

    # Inclut les configurations d'hotes virtuels
    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name nlorion.42.fr;

        keepalive_timeout   70;

        # New root location
        root /var/www/html;

        ssl_certificate /etc/ssl/certs/nlorion.42.fr.rsa.crt;
        ssl_certificate_key /etc/ssl/private/nlorion.42.fr.key;
        ssl_protocols TLSv1.2 TLSv.1.3;
        ssl_session_timeout 10m;

        index index.html index.htm index.php wordpress/index.php;

	    location ~ [^/]\.php(/|$) {
	    	fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }
            # Definit le port wordpress
        	fastcgi_pass wp:8081;

            # Definit un nom de fichier qui sera ajoute apres un URI se terminant par une barre oblique
        	fastcgi_index index.php;

            # Parametrage de FastCGI
        	include fastcgi_params;

            # SCRIPT_FILENAME sera egal au chemin definit ci-dessous
        	fastcgi_param SCRIPT_FILENAME /var/www/html/php$fastcgi_script_name;
        	fastcgi_param PATH_INFO $fastcgi_path_info;

            # Memoire tampon definis pour lire une reponse du serveur FastCGI
	    	fastcgi_buffers 8 8k;

            # Permet de lire la premiere partie de la reponse recue du serveur FastCGI
	    	fastcgi_buffer_size 8k;

            # Permet au client de lire l'integralite de la requete avant d'etre envoyer a un serveur FastCGI
            fastcgi_request_buffering   on;

            # Determine si les reponses du serveur FastCGI avec des codes superieurs ou egaux a 300
            # doivent etre transmises a un client ou etre interceptees et redirigees vers nginx
	    	fastcgi_intercept_errors off;

            # Definit un delait d'attente pour etablir une connexion avec un serveur CGI. Ne peut depasser 75 secondes.
	    	fastcgi_connect_timeout 60s;

            # Delai d'attente definit pour la transmission d'une requete au serveur FastCGI
	    	fastcgi_send_timeout 60s;

            # Delai d'attente pour lire une reponse du serveur FastCGI. Definit uniquement entre deux operations
	    	fastcgi_read_timeout 60s;
	    }

        error_page  404;

        location / {
            autoindex on;
            try_files $uri $uri/ =404;
        }

        location / {
            return 404;
        }

        # Necessaire pour empecher la recursion du retour 404
        location = /404.html {
            internal;
        }
    }
    # include /etc/nginx/http.d/default.conf;
}
